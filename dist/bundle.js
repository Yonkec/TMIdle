(()=>{"use strict";class t{name;constructor(t){this.name=t}enter(){console.log(`Entering ${this.name} state.`)}exit(){console.log(`Exiting ${this.name} state.`)}update(){console.log(`Updating ${this.name} state.`)}}class e extends t{constructor(){super("PlayerTurn")}enter(){super.enter(),console.log("In the Player Turn State")}exit(){super.exit()}update(){super.update()}}class n extends t{constructor(){super("EnemyTurn")}enter(){super.enter()}exit(){super.exit()}update(){super.update()}}class s extends t{constructor(t,n){super("Battle"),this.mob=t,this.player=n,this.currentTurn=new e}enter(){super.enter(),this.currentTurn.enter(),this.battleInterval=window.setInterval((()=>{this.mob.applyDMG(this.player.cachedStats.damage)}),1e3)}exit(){this.currentTurn.exit(),super.exit(),window.clearInterval(this.battleInterval)}update(){this.currentTurn.update(),super.update()}nextTurn(){this.currentTurn instanceof e?(this.currentTurn.exit(),this.currentTurn=new n,this.currentTurn.enter()):(this.currentTurn.exit(),this.currentTurn=new e,this.currentTurn.enter())}}class a extends t{constructor(){super("Idle")}enter(){super.enter()}exit(){super.exit()}update(){super.update()}}class i extends t{constructor(){super("Death")}enter(){super.enter()}exit(){super.exit()}update(){super.update()}}const r=new Map,o=t=>{const e=r.get(t);if(e)return e;const n=document.getElementById(t);if(!n)throw new TypeError(`Nothing with "${t}" was found.`);return r.set(t,n),n};function c(t,e){var n,s,a;for(s=document.getElementsByClassName("tabcontent"),n=0;n<s.length;n++)s[n].style.display="none";for(a=document.getElementsByClassName("tablink"),n=0;n<a.length;n++)a[n].className=a[n].className.replace(" active","");o(e).style.display="block",t.currentTarget.className+=" active"}function d(t,e,n){let s=.36*window.innerWidth*(t.health/t.maxHP);e.style.width=s+"px",t.health<=0?(n&&(n.classList.add("mirrored"),n.classList.add("flashing")),e.style.backgroundColor="red"):t.health<.25*t.maxHP&&(e.style.backgroundColor="orange")}class l{constructor(t){this.player=t,this.items=[]}addItem(t){this.items.push(t)}populateGrid(){const t=o("inventoryGrid");t.innerHTML="",this.items.forEach((e=>{const n=document.createElement("div");n.classList.add("inventory-item-card");const s=document.createElement("h4");if(s.textContent=e.name,n.appendChild(s),e.image){const t=document.createElement("img");t.src=e.image,t.classList.add("inventory-item-image"),n.appendChild(t)}const a=document.createElement("p");a.textContent=e.description,n.appendChild(a);const i=document.createElement("p"),r=Object.entries(e.stats).map((([t,e])=>`${t}: ${e}`));i.textContent=r.join(", "),n.appendChild(i),n.addEventListener("click",(()=>{const t=document.querySelector(".inventory-item-card-selected");t&&t.classList.remove("inventory-item-card-selected"),n.classList.add("inventory-item-card-selected")})),t.appendChild(n)}))}calculateTotalStats(){let t={str:0,sta:0,agi:0,dex:0,wis:0,int:0,cha:0,health:0,damage:0};return this.items.forEach((e=>{Object.keys(e.stats).forEach((n=>{t[n]+=e.stats[n]}))})),t}}window.openTab=c;let h=new class{constructor(){this.maxHP=100,this.health=100,this.isDead=!1,this.coins=1e3,this.coinGens=0,this.kills=0,this.inventory=new l(this),this.inventoryStats={},this.healthBar=o("player-health-bar"),this.baseStats={str:1,sta:1,agi:1,dex:1,wis:1,int:1,cha:1,health:10,damage:1},this.cachedStats={...this.baseStats},this.modifiers=[]}getStat(t){return this.cachedStats[t]}recalculateCachedStats(t){for(let e of t){this.cachedStats[e]=this.baseStats[e];for(let t of this.modifiers)!t.statsAffected[e]||t.condition&&!t.condition()||(this.cachedStats[e]+=t.statsAffected[e])}}removeCoins(t){return this.coins>=t&&(this.coins-=t,!0)}addCoins(t){this.coins+=t}addItemToInventory(t){this.inventory.addItem(t),this.inventory.populateGrid(),this.inventoryStats=this.inventory.calculateTotalStats(),function(t){const e=o("statsBody");for(;e.firstChild;)e.firstChild.remove();const n=t;for(let[t,s]of Object.entries(n)){const n=document.createElement("tr"),a=document.createElement("td");a.textContent=t,n.appendChild(a);const i=document.createElement("td");i.textContent=s,n.appendChild(i),e.appendChild(n)}}(this.inventoryStats)}},u=new class{constructor(t,e){this.maxHP=0,this.isDead=!1,this.type=t,this.player=e,this.monsterImage=o("monster"),this.healthBar=o("enemy-health-bar"),this.baseStats={str:1,sta:1,agi:1,dex:1,wis:1,int:1,cha:1,health:10,damage:1},this.health=this.calcHP(t,e),o("monster").addEventListener("click",(()=>this.applyDMG(1))),o("resetMob").addEventListener("click",(()=>this.resetMob()))}applyDMG(t){this.health<=0+t&&0==this.isDead?(this.health=0,this.isDead=!0,this.player.kills++,console.log(this.player.kills)):0==this.isDead&&(this.health-=t,this.player.coins+=t,this.monsterImage.classList.add("shrink"),setTimeout((()=>{this.monsterImage.classList.remove("shrink")}),150))}resetMob(){0!=this.isDead&&this.health<=0&&(this.isDead=!1),this.health=this.calcHP(this.type,this.player),this.monsterImage.classList.remove("mirrored"),this.monsterImage.classList.remove("flashing"),this.healthBar.style.backgroundColor="green"}calcHP(t,e){let n=Math.floor(10*Math.pow(1.02,this.baseStats.health*e.kills));return this.maxHP=n,n}}(50,h);new class{constructor(t){this.items=[],this.player=t;const e=o("buyButton");fetch("database/items.json").then((t=>t.json())).then((t=>{this.items=t,this.populateGrid()})).catch((t=>console.error("Error:",t))),e.addEventListener("click",(()=>{const t=document.querySelector(".shop-item-card-selected"),e=o("shopMessage");if(t){const n=t.getAttribute("data-id"),s=this.buyItem(this.player,n);e.textContent=s}else e.textContent="No item selected."}))}buyItem(t,e){let n=this.items.find((t=>t.id==e));return n?t.Coins(n.cost)?(t.addItemToInventory(n),`You bought ${n.name}!`):`You do not have enough coins.  This item costs ${n.cost} and you only have ${t.coins} coins.`:"Item does not exist."}populateGrid(){const t=o("itemsGrid");this.items.forEach((e=>{const n=document.createElement("div");n.classList.add("shop-item-card"),n.setAttribute("data-id",e.id);const s=document.createElement("h4");if(s.textContent=e.name,n.appendChild(s),e.image){const t=document.createElement("img");t.src=e.image,t.classList.add("shop-item-image"),n.appendChild(t)}const a=document.createElement("p");a.textContent="Cost: "+e.cost,n.appendChild(a);const i=document.createElement("p");i.textContent=e.description,n.appendChild(i);const r=document.createElement("p"),o=Object.entries(e.stats).map((([t,e])=>`${t}: ${e}`));r.textContent=o.join(", "),n.appendChild(r),n.addEventListener("click",(()=>{const t=document.querySelector(".shop-item-card-selected");t&&t.classList.remove("shop-item-card-selected"),n.classList.add("shop-item-card-selected")})),t.appendChild(n)}))}addItemToShop(t){this.items.push(t)}}(h),(t=>{o("tabButtonFight").addEventListener("click",(t=>c(t,"Fight"))),o("tabButtonStrategy").addEventListener("click",(t=>c(t,"Strategy"))),o("tabButtonInventory").addEventListener("click",(t=>c(t,"Inventory"))),o("tabButtonShop").addEventListener("click",(t=>c(t,"Shop"))),o("tabButtonStats").addEventListener("click",(t=>c(t,"Stats"))),o("buyCoinGen").addEventListener("click",(()=>function(t){let e=Math.floor(10*Math.pow(1.1,t.coinGens));t.coins>=e&&(t.coinGens++,t.coins=t.coins-e)}(t))),o("tabButtonFight").click()})(h),function(){let t,e;fetch("database/actions.json").then((t=>t.json())).then((t=>{for(let e of t){let t=document.createElement("div");t.className="actionCard",t.draggable=!0;let n=document.createElement("h2");n.textContent=e.title,t.appendChild(n);let s=document.createElement("p");s.textContent=e.description,t.appendChild(s),o("playerActionList").appendChild(t)}})),document.addEventListener("dragstart",(function(n){t=n.target,n.target.style.opacity=.5,e=[...t.parentNode.children].indexOf(t)}),!1),document.addEventListener("dragend",(function(t){t.target.style.opacity=""}),!1),document.querySelector("#playerActionQueue").addEventListener("dragover",(function(t){t.preventDefault()}),!1),document.querySelector("#playerActionQueue").addEventListener("drop",(function(e){e.preventDefault();const n=t.cloneNode(!0);n.style.opacity="";let s=e.target;for(;"playerActionQueue"!==s.id&&!s.classList.contains("actionCard")&&!s.classList.contains("queuedCard");)s=s.parentNode;if("playerActionQueue"===s.id)n.dataset.sequence=s.children.length+1,n.classList.replace("actionCard","queuedCard"),s.appendChild(n);else if("playerActionQueue"===t.parentNode.id){const e=n.dataset.sequence,a=s.dataset.sequence;n.dataset.sequence=a,s.dataset.sequence=e,s.parentNode.insertBefore(n,s),s.parentNode.insertBefore(s,t)}else n.classList.replace("actionCard","queuedCard"),n.dataset.sequence=s.parentNode.children.length+1,s.parentNode.insertBefore(n,s.nextSibling);"playerActionQueue"===t.parentNode.id&&t.parentNode.removeChild(t)}),!1)}();const p=o("changeState"),m={battle:()=>new s(u,h),idle:()=>new a(u,h),death:()=>new i(u,h)},y=new class{constructor(t={},e){this.empty={update:function(){},enter:function(){},exit:function(){}},this.states=t,this.current=this.empty,this.buttonText=e}change(t,e){if(!this.states[t])throw new Error(`State ${t} does not exist`);this.current.exit(),this.current=this.states[t](),this.current.enter(e),this.buttonText.textContent=this.current.name}update(){this.current.update()}nextTurn(){this.current instanceof s&&(this.current.nextTurn(),this.buttonText.textContent=this.current.currentTurn.name)}}(m,p);p.addEventListener("click",(()=>{y.change("battle")}));const g=o("monster"),f=o("player-health-bar"),v=o("enemy-health-bar");window.setInterval((function(){((t,e)=>{o("coins").innerHTML=t.coins,o("coinGens").innerHTML=t.coinGens,o("enemyHP").innerHTML=e.health,o("totalKills").innerHTML=t.kills;let n=Math.floor(10*Math.pow(1.1,t.coinGens));o("coinGenCost").innerHTML=n})(h,u),d(u,v,g),d(h,f)}),50)})();